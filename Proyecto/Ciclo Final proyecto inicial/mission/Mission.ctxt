#BlueJ class context
comment0.target=Mission
comment0.text=\r\n\ Un\ juego\ que\ simula\ el\ robo\ de\ una\ bodega\r\n\ \r\n\ @author\ Cristian\ Castellanos-\ Diego\ Gonzalez\ \r\n\ @version\ 30/03/2021\r\n
comment1.params=length\ width
comment1.target=Mission(int,\ int)
comment1.text=\r\n\ Crea\ una\ nueva\ mision\ con\ las\ medidas\ dadas\r\n\ @param\ length\ -\ Longitud\ de\ la\ bodega\ a\ simular\r\n\ @param\ width\ -\ Ancho\ de\ la\ bodega\ a\ simular\r\n
comment10.params=row\ column
comment10.target=void\ steal(int,\ int)
comment10.text=\r\n\ Roba\ la\ caja\ de\ la\ posicion\ asignada\r\n\ @param\ row\ -\ Fila\ de\ la\ bodega\ en\ donde\ se\ roba\ la\ caja\r\n\ @param\ column\ -\ Columna\ de\ la\ bodega\ en\ donde\ se\ roba\ la\ caja\r\n
comment11.params=crate
comment11.target=void\ steal(int[])
comment11.text=\r\n\ Funci\u00F3n\ creada\ para\ llamar\ a\ la\ funci\u00F3n\ steal(row,column),\ para\ que\ robe\r\n\ en\ la\ posici\u00F3n\ deseada\ de\ acuerdo\ a\ las\ coordenadas\ que\ se\ encuentra\ \r\n\ como\ par\u00E1metro\ (crate)\r\n\ @param\ crate\r\n
comment12.params=
comment12.target=void\ Return()
comment12.text=\r\n\ Retorna\ la\ ultima\ robada\ a\ su\ posicion\ original\ en\ la\ zona\ de\ robo\r\n
comment13.params=from\ to
comment13.target=void\ arrange(int[],\ int[])
comment13.text=\r\n\ Envia\ la\ caja\ desde\ una\ posicion\ en\ la\ zona\ de\ robo\ a\ otra\r\n\ @param\ from\ -\ Ubicacion\ de\ la\ caja\ a\ cambiar\r\n\ @param\ to\ -\ Destino\ de\ la\ caja\ a\ cambiar\r\n
comment14.params=
comment14.target=int\ stolen()
comment14.text=\r\n\ Numero\ de\ cajas\ robadas\ en\ la\ ultima\ accion\ del\ plan\ de\ robo\r\n\ @return\ -\ Numero\ de\ cajas\r\n
comment15.params=
comment15.target=int[][]\ warehouse()
comment15.text=\r\n\ Retorna\ los\ valores\ de\ la\ zona\ de\ bodega\r\n\ @return\ -\ Valores\ de\ la\ zona\ de\ bodega\r\n
comment16.params=
comment16.target=int[][]\ layout()
comment16.text=\r\n\ Retorna\ los\ valores\ de\ la\ zona\ de\ robo\r\n\ @return\ valores\ de\ la\ zona\ de\ robo\r\n
comment17.params=
comment17.target=void\ makeVisible()
comment17.text=\r\n\ Hace\ visible\ el\ simulador\r\n
comment18.params=
comment18.target=void\ makeInvisible()
comment18.text=\r\n\ Hace\ invisible\ el\ simulador\r\n
comment19.params=
comment19.target=void\ finish()
comment19.text=\r\n\ Finaliza\ el\ simulador\r\n
comment2.params=length\ width\ heights
comment2.target=Mission(int,\ int,\ int[][])
comment2.text=\r\n\ Segundo\ constructor\ de\ la\ clase\ Mission,\ este\ tiene\ como\ par\u00E1metros\ los\ mismos\ que\ el\ primero\r\n\ solo\ que\ se\ le\ agrega\ una\ matriz\ num\u00E9rica\ para\ empezar\ de\ una\ vez\ el\ simulador\ y\ sus\ vistas\ en\r\n\ vez\ de\ estar\ metiendo\ caja\ por\ caja\r\n\ @param\ length\r\n\ @param\ width\r\n\ @param\ heights\r\n
comment20.params=
comment20.target=boolean\ ok()
comment20.text=\r\n\ Verifica\ si\ la\ accion\ recien\ hecha\ se\ puede\ hacer\r\n\ @return\ -\ true\ si\ la\ accion\ se\ puede\ hacer\ de\ lo\ contrario\ else\r\n
comment21.params=
comment21.target=void\ refresh()
comment22.params=stock\ robbery
comment22.target=boolean\ equals(int[],\ int[])
comment22.text=\r\n\ Funci\u00F3n\ generada\ para\ revisar\ si\ el\ arreglo\ de\ la\ bodega\r\n\ es\ igual\ al\ arreglo\ de\ robo\r\n\ @param\ stock\r\n\ @param\ robbery\r\n\ @return\r\n
comment23.params=stock\ robbery
comment23.target=boolean\ equals(int[][],\ int[][])
comment23.text=\r\n\ Funcion\ generada\ para\ revisar\ si\ la\ vista\ superior\ de\ la\ bodega\ es\ iguala\ a\ la\ de\ robo\r\n\ @param\ stock\ valores\ de\ la\ bodega\r\n\ @param\ robbery\ valores\ de\ la\ zona\ de\ robo\r\n\ @return\ true\ si\ los\ valores\ son\ iguales,\ false\ de\ lo\ contrario\r\n
comment24.params=action\ Type\ ubicacion\ destino
comment24.target=void\ beforeAction(java.lang.String,\ java.lang.String,\ java.lang.String[],\ java.lang.String[])
comment24.text=\r\n\ Agrega\ la\ accion\ descrita\ al\ historial\r\n\ @action\ Action\ ha\ agregar\r\n\ @param\ ubicacion\ -\ Coordenadas\ de\ la\ caja\ robada,\ retornada\ o\ cambiada.\r\n\ @param\ destino\ -\ Coordenadas\ a\ donde\ fue\ enviada\ la\ caja\r\n
comment25.params=action\ Char
comment25.target=void\ beforeAction(java.lang.String,\ char)
comment25.text=\r\n\ Encargado\ de\ meter\ al\ arreglo\ de\ before\ lo\ que\ se\ hizo\r\n\ @param\ action\r\n\ @param\ Char\r\n
comment26.params=i\ j
comment26.target=java.lang.String[]\ toString(int,\ int)
comment26.text=\r\n\ Toma\ dos\ numeros\ y\ los\ retorna\ como\ un\ arreglo\ de\ String\r\n\ @param\ i\ -\ Primer\ numero\r\n\ @param\ j\ -\ Segundo\ numeros\r\n\ @return\ array\ -\ Arreglo\ con\ dos\ numeros\ en\ forma\ String\ \r\n
comment27.params=
comment27.target=void\ undo()
comment27.text=\r\n\ Deshace\ la\ accion\ que\ hizo\ el\ jugador\r\n
comment28.params=
comment28.target=void\ redo()
comment28.text=\r\n\ Rehace\ la\ accion\ que\ hizo\ el\ jugador\r\n
comment3.params=heights
comment3.target=void\ create(int[][])
comment3.text=\r\n\ Funci\u00F3n\ creada\ para\ crear\ las\ pilas\ de\ cajas\ y\ vistas\r\n\ respecto\ a\ la\ matriz\ num\u00E9rica\ dada\ por\ el\ usuario\r\n\ @param\ heights\r\n
comment4.params=
comment4.target=Zone\ getZone()
comment4.text=\r\n\ Funci\u00F3n\ creada\ para\ retornar\ la\ zona\ a\ la\ que\ pertenece\ la\ bodega\r\n\ @return\ -\ zona\ de\ bodega\r\n
comment5.params=row\ column
comment5.target=void\ store(int,\ int)
comment5.text=\r\n\ Agrega\ una\ caja\ en\ la\ bodega\ en\ la\ posicion\ indicada\r\n\ @param\ row\ -\ Fila\ de\ la\ bodega\ en\ donde\ se\ ubica\ la\ caja\r\n\ @param\ column\ -\ Columna\ de\ la\ bodega\ en\ donde\ se\ ubica\ la\ caja\r\n
comment6.params=row\ column\ cant
comment6.target=void\ Store_All_box(int,\ int,\ int)
comment6.text=\r\n\ Funci\u00F3n\ generada\ para\ insertar\ la\ cantidad\ de\ cajas\ dadas\ en\ la\ matriz\ num\u00E9rica\r\n\ en\ la\ posici\u00F3n\ deseada\ \r\n\ @param\ row\r\n\ @param\ column\r\n\ @param\ cant\r\n
comment7.params=crate
comment7.target=void\ store(int[])
comment7.text=\r\n\ Agrega\ una\ caja\ en\ la\ bodega\ en\ la\ posicion\ indicada\r\n\ @param\ crate-\ Pareja\ que\ da\ la\ posicion\ en\ donde\ poner\ la\ caja\r\n
comment8.params=type\ row\ column
comment8.target=void\ store(java.lang.String,\ int,\ int)
comment8.text=\r\n\ Funci\u00F3n\ generada\ para\ insertar\ una\ caja\ en\ la\ posici\u00F3n\ deseada\ por\ el\ usuario\r\n\ esta\ funci\u00F3n\ tiene\ la\ diferencia\ de\ que\ la\ caja\ puede\ ser\ de\ otro\ tipo\ adem\u00E1s\ de\ la\ normal\r\n\ (normal,\ delicate,\ rebel,\ frost,\ safe,\ heavy)\ \r\n\ @param\ type\r\n\ @param\ row\r\n\ @param\ column\r\n
comment9.params=
comment9.target=void\ copy()
comment9.text=\r\n\ Crea\ una\ copia\ de\ la\ bodega\ en\ una\ zona\ de\ robo\r\n
numComments=29
