#BlueJ class context
comment0.target=MissionContest
comment0.text=\r\n\ Clase\ creada\ para\ resolver\ el\ problema\ y\ para\ simularlo\r\n\ \r\n\ @author\ (Diego\ Gonz\u00E1lez\ -\ Cristian\ Castellanos)\ \r\n\ @version\ (3.0\ 08/03/2021)\r\n
comment1.params=heights
comment1.target=int\ solve(int[][])
comment1.text=\r\n\ Funcion\ creada\ para\ resolver\ la\ matriz\ de\ robo,\ y\ decirnos\ cuantas\ cajas\ se\ pudieron\r\n\ robar.\ Se\ extiende\ el\ par\u00E1metro\ en\ el\ sentido\ de\ que\ se\ imprime\ cada\ movimiento\ que\ se\ haga\r\n\ @param\ heights\r\n
comment10.params=column
comment10.target=int\ maxColumn(int)
comment10.text=\r\n\ Funcion\ creada\ para\ sacar\ el\ maximo\ de\ la\ columna\ que\ desee\ el\ usuario\r\n\ @param\ matriz\ -->\ int[][]\r\n\ @param\ column\ -->\ int\r\n\ @return\ -->\ M\u00E1ximo\ de\ la\ columna\r\n
comment11.params=vector\ position
comment11.target=int\ maxRow(int[],\ int)
comment11.text=\r\n\ Funcion\ creada\ para\ retornar\ el\ n\u00FAmero\ m\u00E1ximo\ de\ una\ fila\r\n\ @param\ vector\r\n\ @return\ -->\ M\u00E1ximo\ de\ la\ fila\r\n
comment12.params=vector\ max
comment12.target=java.util.ArrayList\ getRepeatsRow(int[],\ int)
comment12.text=\r\n\ Funcion\ generada\ para\ guardar\ los\ \u00EDndices\ de\ la\ fila\ donde\ est\u00E1\ repetido\ el\ n\u00FAmero\ m\u00E1ximo\r\n\ @param\ vector\r\n\ @param\ max\r\n\ @return\r\n
comment13.params=column\ max
comment13.target=java.util.ArrayList\ getRepeatsColumn(int,\ int)
comment13.text=\r\n\ Funcion\ generada\ para\ guardar\ los\ \u00EDndices\ de\ la\ columna\ donde\ est\u00E1\ repetido\ el\ n\u00FAmero\ m\u00E1ximo\r\n\ @param\ column\r\n\ @param\ max\r\n\ @return\r\n
comment14.params=column\ max_number
comment14.target=boolean\ Checker_2_repeatcolumn(int,\ int)
comment14.text=\r\n\ Funci\u00F3n\ generada\ para\ revisar\ si\ los\ m\u00E1ximos\ repetidos\ son\ m\u00E1ximos\ de\ su\ fila\r\n\ @param\ column\r\n\ @param\ max_number\r\n\ @return\r\n
comment15.params=column\ max_number\ simulate
comment15.target=void\ checkerRepeatColumn(int,\ int,\ boolean)
comment15.text=\r\n\ Funcion\ creada\ para\ revisar\ en\ la\ columna\ donde\ est\u00E1\ m\u00E1s\ de\ una\ vez\ el\ n\u00FAmero\ m\u00E1ximo\r\n\ Si\ en\ sus\ filas\ correspondientes\ son\ tambi\u00E9n\ el\ m\u00E1ximo\ de\ fila,\ en\ caso\ que\ no\ lo\ sean\r\n\ se\ les\ roba,\ en\ caso\ que\ si,\ se\ revisa\ si\ aparece\ m\u00E1s\ de\ una\ vez\ en\ esa\ fila\r\n\ @param\ column\r\n\ @param\ max_number\r\n
comment16.params=vector\ max_number
comment16.target=boolean\ Checker_2_repeatRow(int[],\ int)
comment16.text=\r\n\ Funcion\ creada\ para\ revisar\ si\ en\ los\ \u00EDndices\ donde\ est\u00E1n\ repetidos,\ estos\ son\ m\u00E1ximos\ de\ su\ columna\ \r\n\ correspondiente,\ si\ eso\ no\ pasa,\ se\ le\ suma\ 1\ al\ contador\r\n\ @param\ vector\r\n\ @param\ max_number\r\n\ @return\r\n
comment17.params=vector\ max_number\ position_row\ simulate
comment17.target=void\ checkerRepeatRow(int[],\ int,\ int,\ boolean)
comment17.text=\r\n\ Funcion\ creada\ para\ revisar\ en\ la\ fila\ si\ el\ n\u00FAmero\ m\u00E1ximo\ est\u00E1\ repetido\r\n\ En\ caso\ tal,\ se\ revisa\ cada\ \u00EDndice\ su\ columna\ correspondiente\ para\ mirar\ si\ tambi\u00E9n\ es\ el\r\n\ m\u00E1ximo\ de\ la\ columna,\ en\ caso\ que\ no\ lo\ sea,\ se\ le\ roba\r\n\ @param\ vector\r\n\ @param\ max_number\r\n\ @param\ position_row\r\n
comment18.params=number\ vector\ column\ position
comment18.target=boolean\ checkerMaxRowNOMaxColumn(int,\ int[],\ int,\ int)
comment18.text=\r\n\ Funci\u00F3n\ creda\ para\ revisar\ si\ el\ n\u00FAmero\ definido\ es\ el\ m\u00E1ximo\ de\ su\ fila\ num\u00E9rica\r\n\ pero\ no\ es\ m\u00E1ximo\ de\ su\ columna\ num\u00E9rica.\ Revisa\ tambi\u00E9n\ que\ el\ m\u00E1ximo\ est\u00E9\ repetido\r\n\ en\ su\ fila\r\n\ @param\ number\r\n\ @param\ vector\r\n\ @param\ column\r\n\ @param\ position\r\n\ @return\r\n
comment19.params=number\ vector\ column\ position
comment19.target=boolean\ checkerMaxColumnNOMaxRow(int,\ int[],\ int,\ int)
comment19.text=\r\n\ Funci\u00F3n\ creada\ para\ revisar\ si\ el\ n\u00FAmero\ definido\ es\ el\ m\u00E1ximo\ de\ su\ columna\ num\u00E9rica\r\n\ pero\ no\ es\ m\u00E1ximo\ de\ su\ fila\ num\u00E9rica.\ Revisa\ que\ el\ m\u00E1ximo\ est\u00E9\ repetido\ en\ su\ columna\r\n\ @param\ number\r\n\ @param\ vector\r\n\ @param\ column\r\n\ @param\ position\r\n\ @return\r\n
comment2.params=heights\ slow
comment2.target=void\ simulate(int[][],\ boolean)
comment2.text=\r\n\ Funci\u00F3n\ creada\ para\ simular\ la\ soluci\u00F3n\ de\ la\ automatizaci\u00F3n\ del\ robo.\r\n\ @param\ heights\r\n\ @param\ slow\r\n
comment20.params=number\ vector\ column\ position\ simulate
comment20.target=void\ checkerNumber(int,\ int[],\ int,\ int,\ boolean)
comment20.text=\r\n\ Funcion\ creada\ para\ revisar\ si\ en\ esta\ posici\u00F3n\ se\ puede\ robar\r\n\ @param\ number\r\n\ @param\ vector\r\n\ @param\ column\r\n\ @param\ position\r\n
comment21.params=simulate
comment21.target=void\ canPosition(boolean)
comment21.text=\r\n\ Funcion\ creada\ para\ revisar\ si\ en\ la\ posicion\ de\ la\ matriz\ se\ puede\ robar,\ y\ si\ es\ as\u00ED\ robar\r\n\ @param\ heights\r\n
comment3.params=
comment3.target=int[][]\ getWarehouse()
comment4.params=
comment4.target=int[][]\ getRobbery()
comment5.params=row\ column
comment5.target=void\ store(int,\ int)
comment5.text=\r\n\ Funcion\ creada\ para\ insertar\ cajas\ en\ la\ matriz\ num\u00E9rica\ de\ acuerdo\ a\ la\ posici\u00F3n\r\n\ requerida\ por\ el\ usuario\r\n\ @param\ row\r\n\ @param\ column\r\n
comment6.params=
comment6.target=void\ refresh()
comment6.text=\r\n\ Funci\u00F3n\ creada\ para\ copiar\ en\ la\ matriz\ num\u00E9rica\ de\ robo,\ los\ valores\r\n\ que\ tenga\ la\ matriz\ de\ bodega,\ esta\ funci\u00F3n\ se\ usa\ en\ caso\ que\ el\ usuario\ \r\n\ tenga\ que\ meter\ m\u00E1s\ cajas\ (Actualizando\ la\ matriz)\r\n
comment7.params=row\ column
comment7.target=void\ steal(int,\ int)
comment7.text=\r\n\ Funci\u00F3n\ creada\ para\ robar\ en\ la\ posici\u00F3n\ deseada\ por\ el\ usuario\ en\ la\ matriz\ de\ robo\r\n\ @param\ row\r\n\ @param\ column\r\n
comment8.params=row\ column
comment8.target=int\ stealPosition(int,\ int)
comment8.text=\r\n\ \ Funcion\ creada\ para\ robar\ cajas\ de\ la\ posicion\ que\ est\u00E1\ como\ par\u00E1metro\r\n\ \ Estas\ cajas\ se\ meten\ como\ rect\u00E1ngulos\ en\ una\ pila\r\n\ \ Se\ crea\ contador\ para\ mirar\ cuantas\ cajas\ se\ han\ robado\r\n\ @param\ row\r\n\ @param\ column\r\n
comment9.params=row\ column
comment9.target=int\ stealPositionSimulate(int,\ int)
comment9.text=\r\n\ Funci\u00F3n\ creada\ para\ simular\ el\ robo\ de\ cajas.\ Como\ ahora\ podemos\ usar\ el\ m\u00E9todo\ steal\r\n\ de\ Mission,\ se\ roba\ con\ ese\ m\u00E9todo\ en\ vez\ de\ robar\ con\ el\ que\ creamos\ en\ esta\ clase\r\n\ @param\ row\r\n\ @param\ column\r\n\ @return\r\n
numComments=22
