#BlueJ class context
comment0.target=Zone
comment0.text=\r\n\ Una\ zona\ que\ representa\ una\ matriz\ dada\r\n\ \r\n\ @author\ Cristian\ Castellanos-\ Diego\ Gonzalez\ \r\n\ @version\ 27/03/2021\r\n
comment1.params=x\ y\ fila\ columna
comment1.target=Zone(int,\ int,\ int,\ int)
comment1.text=\r\n\ Crea\ una\ zona\ en\ la\ posicion\ dada\ con\ tres\ vistas\ frontal,\ lateral\ y\ superior\ con\ las\ medidad\ dadas\r\n\ @param\ x\ -\ Posicion\ de\ la\ zona\ en\ el\ eje\ x\r\n\ @param\ y\ -\ Posicion\ de\ la\ zona\ en\ el\ eje\ y\r\n\ @param\ fila-\ Numero\ de\ filas\ de\ la\ zona\ a\ crear\r\n\ @param\ columna-\ Numero\ de\ columnas\ de\ la\ zona\ a\ crear\r\n
comment10.params=
comment10.target=void\ makeVisible()
comment11.params=
comment11.target=void\ makeInvisible()
comment12.params=d
comment12.target=void\ moveVertical(int)
comment12.text=\r\n\ Mueva\ las\ vistas\ de\ la\ zona\ una\ distancia\ d\r\n\ @param\ d-\ Distancia\ a\ mover\ las\ vistas\ verticalmente\r\n
comment13.params=d
comment13.target=void\ moveHorizontal(int)
comment13.text=\r\n\ Mueve\ las\ vistas\ de\ la\ zona\ una\ distancia\ d\r\n\ @param\ d-\ Distancia\ a\ mover\ las\ vistas\ horizontalmente\r\n
comment14.params=matriz
comment14.target=int[]\ maxRow(int[][])
comment14.text=\r\n\ Calcula\ los\ valores\ maximos\ de\ una\ matriz\ y\ lo\ retorna\ en\ un\ arreglo\r\n\ @param\ matriz\ -\ Matriz\ a\ la\ cual\ se\ le\ saca\ los\ maximos\r\n\ @return\ -\ Retorna\ un\ arreglo\ con\ los\ maximos\ de\ la\ matriz\ por\ fila\r\n
comment15.params=array
comment15.target=int\ maxArray(int[])
comment15.text=\r\n\ Calcula\ el\ valor\ maximo\ de\ un\ arreglo\r\n\ @param\ array\ -\ Arreglo\ del\ cual\ se\ quiere\ saber\ el\ valor\ mayor\r\n\ @return\ -\ Entero\ que\ represneta\ le\ valor\ mayor\ del\ arreglo\r\n
comment16.params=matriz
comment16.target=int[]\ maxColumns(int[][])
comment16.text=\r\n\ Calcula\ los\ valores\ maximos\ de\ una\ matriz\r\n\ @param\ matriz\ -\ Matriz\ a\ la\ cual\ se\ le\ saca\ los\ maximos\r\n\ @return\ Retorna\ un\ arreglo\ con\ los\ maximos\ por\ columna\r\n
comment17.params=type_Check
comment17.target=boolean\ checkerTypes(java.lang.String)
comment17.text=\r\n\ Funci\u00F3n\ generada\ para\ revisar\ que\ el\ tipo\ de\ caja\ que\ quiera\ el\ usuario\r\n\ est\u00E9\ entre\ las\ que\ se\ pueden\ crear\r\n\ @param\ type_Check\r\n\ @return\ -->\ boolean\ answer\r\n
comment18.params=row\ column\ type
comment18.target=void\ store(int,\ int,\ java.lang.String)
comment18.text=\r\n\ Agrega\ a\ las\ vistas\ una\ nueva\ caja\ en\ la\ posicion\ indicada\r\n\ @param\ row\ -\ Fila\ de\ la\ pila\ en\ la\ que\ se\ agrega\ la\ caja\r\n\ @param\ column\ -\ Columna\ de\ la\ pila\ en\ la\ que\ se\ agrega\ la\ caja\ \r\n
comment19.params=crate\ type
comment19.target=void\ store(int[],\ java.lang.String)
comment19.text=\r\n\ Funci\u00F3n\ creada\ para\ insertar\ cajas\ en\ una\ posici\u00F3n\ determinada\ de\ acuerdo\ a\ la\ posici\u00F3n\ y\ que\ \r\n\ tipo\ de\ caja\ quiere\ que\ sea\r\n\ @param\ crate\r\n\ @param\ type\r\n
comment2.params=x\ y\ heigths
comment2.target=Zone(int,\ int,\ int[][])
comment2.text=\r\n\ Crea\ una\ zona\ en\ la\ posicion\ dada,\ con\ tres\ vistas\ frontal,\ lateral\ y\ superior\ basandose\ en\ una\ matriz\r\n\ @param\ x\ -\ Posicion\ de\ la\ zona\ en\ el\ eje\ x\r\n\ @param\ y\ -\ Posicion\ de\ la\ zona\ en\ el\ eje\ y\r\n\ @param\ heigths\ -\ Matriz\ que\ representa\ la\ bodega\r\n
comment20.params=matriz\ i
comment20.target=int[]\ getColumns(int[][],\ int)
comment20.text=\r\n\ Retorna\ la\ columna\ de\ la\ matriz\ se\u00F1alada\r\n\ @param\ matriz\ -\ Matriz\ de\ la\ cual\ se\ quiere\ saber\ la\ columna\r\n\ @param\ i\ -\ Numero\ de\ la\ columna\ a\ obtener\r\n\ @return\ -\ Arreglo\ que\ representa\ la\ columna\ de\ la\ matriz\ en\ la\ posicion\ se\u00F1alada\r\n
comment21.params=views
comment21.target=View\ getMaxViews(View[])
comment21.text=\r\n\ Calcula\ cual\ es\ la\ vista\ con\ mayor\ altura\ de\ un\ arreglo\ de\ vistas\ y\ retorna\ esta\ vista\r\n\ @param\ views\ -\ Arreglo\ de\ vistas\r\n\ @return\ -\ Altura\ maxima\ del\ arreglo\ de\ vistas\r\n
comment22.params=views
comment22.target=int\ getMaxHeigthsView(View[])
comment22.text=\r\n\ Calcula\ la\ altura\ mas\ alta\ de\ una\ lista\ de\ vistas\r\n\ @param\ views\ -\ Arreglo\ de\ vistas\r\n\ @return\ -\ Altura\ max\ grande\ del\ arreglo\ de\ vistas\r\n
comment23.params=views
comment23.target=int\ getMinPositionMaxView(View[])
comment23.text=\r\n\ Retorna\ la\ posicion\ Y\ mas\ baja\ de\ una\ lista\ de\ vistas\r\n\ @param\ views\ -\ Arreglo\ de\ vistas\r\n\ @return\ -\ Posicion\ y\ mas\ baja\r\n
comment24.params=
comment24.target=int\ getMaxZone()
comment24.text=\r\n\ Calcula\ la\ altura\ de\ la\ zona\ teniendo\ en\ cuenta\ sus\ vistas\r\n\ @return\ -\ Altura\ maxima\ de\ la\ zona\r\n
comment25.params=
comment25.target=int\ getMinZone()
comment26.params=
comment26.target=int[][]\ getHeigths()
comment3.params=
comment3.target=View[]\ getSideViews()
comment4.params=
comment4.target=View[]\ getFrontView()
comment5.params=
comment5.target=UpView\ getUpView()
comment6.params=newView
comment6.target=void\ setSideView(View[])
comment7.params=newView
comment7.target=void\ setFrontView(View[])
comment8.params=newView
comment8.target=void\ setUpView(UpView)
comment9.params=
comment9.target=void\ refresh()
comment9.text=\r\n\ Refresca\ la\ zona,\ teniendo\ en\ cuenta\ la\ altura\ de\ la\ zona\ baja\ la\ imagen\r\n
numComments=27
