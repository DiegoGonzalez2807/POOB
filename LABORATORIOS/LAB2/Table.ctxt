#BlueJ class context
comment0.target=Table
comment0.text=\r\n\ @author\ ECI,\ 2021-1\r\n\r\n
comment1.params=attributes
comment1.target=Table(java.lang.String[])
comment1.text=\r\n\ Constructs\ a\ new,\ empty\ table,\ with\ the\ specified\ attribute\ names.\r\n\ @param\ names,\ \r\n
comment10.params=t
comment10.target=Table\ naturalJoin(Table)
comment11.params=newAttributes
comment11.target=Table\ rename(java.lang.String[])
comment12.params=t
comment12.target=java.lang.String\ union(Table)
comment12.text=\r\n\ Set\ operators\r\n\ The\ two\ relations\ involved\ must\ be\ union-compatible\u2014that\ is,\ the\ two\ relations\ must\ have\ the\ same\ set\ of\ attributes.\r\n
comment13.params=t
comment13.target=Table\ intersection(Table)
comment14.params=t
comment14.target=Table\ difference(Table)
comment15.params=t
comment15.target=boolean\ equals(Table)
comment15.text=\r\n\ Indicates\ whether\ some\ other\ table\ is\ "equal\ to"\ this\ one.\r\n\ @param\ t\ the\ table\ with\ which\ to\ compare.\r\n
comment16.params=o
comment16.target=boolean\ equals(java.lang.Object)
comment17.params=
comment17.target=java.lang.String\ toString()
comment2.params=tuples
comment2.target=void\ insert(java.lang.String[][])
comment2.text=\r\n\ Inserts\ the\ specified\ tuples\ to\ this\ table\ \r\n\ @param\ tuples,\ \r\n
comment3.params=
comment3.target=int\ size()
comment3.text=\r\n\ @return\ size\ of\ the\ table,\ number\ of\ rows\ in\ the\ table\r\n
comment4.params=
comment4.target=java.lang.String[]\ attributes()
comment4.text=\r\n\ @return\ attributes\ of\ the\ table\r\n
comment5.params=n
comment5.target=java.lang.String[]\ tuple(int)
comment5.text=\r\n\ @param\ n\ index\ in\ the\ table\ that\ we\ want\ to\ look\ the\ data\r\n\ @return\ tuples\ in\ the\ table\ in\ index\ n\r\n
comment6.params=tuple
comment6.target=boolean\ in(java.lang.String[])
comment7.params=attributes
comment7.target=Table\ proyection(java.lang.String[])
comment7.text=\r\n\ Given\ a\ attributes,\ return\ the\ data\ of\ this\r\n\ @param\ attributes\ give\ the\ attributes\ that\ we\ want\ to\ show\r\n\ @return\ the\ table\ with\ the\ attributes\ and\ its\ data\ \r\n
comment8.params=attributes
comment8.target=int[]\ index(java.lang.String[])
comment8.text=\r\n\ Calculate\ the\ position\ of\ the\ attributes\ in\ the\ table\r\n\ @attributes\ array\ wich\ we\ want\ to\ obtain\ the\ position\ in\ teh\ attributes\ in\ the\ table\r\n\ @return\ a\ array\ of\ the\ index\ of\ the\ attributes\r\n
comment9.params=attribute\ value
comment9.target=Table\ selection(java.lang.String,\ java.lang.String)
comment9.text=\r\n\ Selecciona\ las\ filas\ de\ los\ datos\ que\ tienen\ value\ en\ el\ attribute\ seleccionado\r\n\ @param\ attribute\ nombre\ de\ la\ columna\ en\ donde\ queremos\ buscar\ los\ datos\r\n\ @param\ value\ valor\ que\ se\ debe\ encontar\ en\ las\ tuples\ de\ el\ attribute\r\n\ @return\ un\ arreglo\ con\ las\ tuplas\ que\ cumplen\ la\ condicion\ \r\n
numComments=18
